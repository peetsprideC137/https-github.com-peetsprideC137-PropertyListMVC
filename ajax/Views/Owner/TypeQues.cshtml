@model ajax.Models.PropertyQuestion

@{
    ViewBag.Title = "TypeQues";
    Layout = "~/Views/Shared/_LayoutOwner.cshtml";
}
<style>
    body {
        color: white;
    }

    .jumbotron {
        text-align: center;
        background-color: rgba(233, 232, 232, 0.45);
        width: 50%;
        margin-left: 5%;
        color: darkblue;
        font-size: larger;
        font-weight: bolder;
    }
</style>

<div class="progress">
    <div class="progress-bar" role="progressbar" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100" style="width:100%"></div>
</div>
<h3>step 3</h3>

<center><h4 style="color:white;">This will help you put better bidders for you property</h4></center>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="jumbotron">
        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @*@Html.LabelFor(model => model.PropertyId, htmlAttributes: new { @class = "control-label col-md-2" })*@
                <div class="col-md-6">
                    @Html.HiddenFor(model => model.PropertyId, new { htmlAttributes = new { @class = "form-control" } })
                    @*@Html.ValidationMessageFor(model => model.PropertyId, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Question1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Question1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Question1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Response1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    <b>yes</b>
                    @Html.RadioButtonFor(m => m.Response1, "yes")
                    <b>no</b>
                    @Html.RadioButtonFor(m => m.Response1, "no")

                    @*@Html.EditorFor(model => model.Response1, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.Response1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Question2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Question2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Question2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Response2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    <b>yes</b>
                    @Html.RadioButtonFor(m => m.Response2, "yes")
                    <b>no</b>
                    @Html.RadioButtonFor(m => m.Response2, "no")
                    @*@Html.EditorFor(model => model.Response2, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.Response2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Question3, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Question3, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Question3, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
            @Html.LabelFor(model => model.Response3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                <b>yes</b>
                @Html.RadioButtonFor(m => m.Response3, "yes")
                <b>no</b>
                @Html.RadioButtonFor(m => m.Response3, "no")
                @*@Html.EditorFor(model => model.Response3, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Response3, "", new { @class = "text-danger" })
            </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Question4, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Question4, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Question4, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Response4, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    <b>yes</b>
                    @Html.RadioButtonFor(m => m.Response4, "yes")
                    <b>no</b>
                    @Html.RadioButtonFor(m => m.Response4, "no")

                    @*@Html.EditorFor(model => model.Response4, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.Response4, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Percentage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EditorFor(model => model.Percentage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Percentage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-info" />
                </div>
            </div>

        </div>
    </div>
}

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

