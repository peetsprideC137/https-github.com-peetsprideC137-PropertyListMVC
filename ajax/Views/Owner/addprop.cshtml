
@model ajax.Models.PropertyDetail

@{
    ViewBag.Title = "addprop";
    Layout = "~/Views/Shared/_LayoutOwner.cshtml";
}
<style>
body{
color:white;
}
 .jumbotron {
        text-align: center;
        background-color: rgba(233, 232, 232, 0.45);
        width: 50%;
        margin-left: 5%;
        color:darkblue;
        font-size:larger;
        font-weight:bolder;
    }
    </style>

<center><h2 style="color:white">Add a new Property</h2></center>
<hr />
<div class="progress">
    <div class="progress-bar" role="progressbar" aria-valuenow="33.33" aria-valuemin="0" aria-valuemax="100" style="width:33%"></div>
</div>
<h3>step 1</h3>

<center><h4 style="color:white;">Please enter the Property Details</h4></center>
@*@int a=@Convert.ToInt32(Session["Id"])*@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="jumbotron">
    <div class="form-horizontal">
        
      
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.OwnerID, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-6">
                @Html.HiddenFor(model => model.OwnerID, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.OwnerID, "", new { @class = "text-danger" })*@
               
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.PropertyType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.PropertyType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PropertyType, "", new { @class = "text-danger" })
            </div>
        </div>*@







        <div class="form-group">
            @Html.Label("Property type", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-4">
                @{
    List<SelectListItem> listItems = new List<SelectListItem>();
   

   
    listItems.Add(new SelectListItem
         {
             Text = "FLAT",
             Value = "flat",
         });
    listItems.Add(new SelectListItem
         {
             Text = "HOUSE",
             Value = "house"
         });
    listItems.Add(new SelectListItem
    {
        Text = "PG",
        Value = "pg"
    });
                }
                @Html.DropDownListFor(model => model.PropertyType, listItems)
                @Html.ValidationMessageFor(model => model.PropertyType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Area, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.nState, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.nState, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nState, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PinCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.PinCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PinCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Rent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Views, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Views, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Views, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Latitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Longitude, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Images, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Images, new { htmlAttributes = new { @class = "form-control" } })

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

