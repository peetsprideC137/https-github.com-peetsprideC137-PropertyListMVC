@model ajax.Models.Recfrombrok

@{
    ViewBag.Title = "feellazy";
    Layout = "~/Views/Shared/_LayoutClient.cshtml";
}
<style>
  .jumbotron {
        text-align: center;
        width: 60%;
        height: 100%;
       background-color:rgba(233, 232, 232, 0.45);
        color:darkblue;
        margin-top: 5%;
       margin-left:10%;
       font-weight: 600;
       font-size:large;
    }

    body {
    background-image: url('../images/login_bg.jpg');
    background-repeat: no-repeat;
    background-size: cover;
  
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}
</style>
<center>
    <h3>Feeling Lazy??</h3>
    <h4>Try our proven reccomendations for a better search</h4>
</center>
@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="jumbotron">
    <div class="form-horizontal">
        <h3>Reccomendations</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NoOfRooms, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.NoOfRooms, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NoOfRooms, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Maxamount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Maxamount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Maxamount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Minamount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Minamount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Minamount, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.BrokId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.BrokId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BrokId, "", new { @class = "text-danger" })

                @*@Html.DropDownListFor()*@
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.req1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.req1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.req1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.req2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.req2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.req2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.req3, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.req3, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.req3, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.propidone, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-2">
                @Html.HiddenFor(model => model.propidone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.propidone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.propidtwo, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-2">
                @*@Html.HiddenFor(model => model.propidtwo, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.propidtwo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.CustId, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-2">
                @Html.HiddenFor(model => model.CustId, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.CustId, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10" style="padding-right:250px">
                <input type="submit" value="Create" class="btn btn-warning" />
            </div>
        </div>
    </div>
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
